import re
import requests
import sys

SENSITIVE_PATTERNS = {
    "AWS Access Key": r"AKIA[0-9A-Z]{16}",
    "Slack Token": r"xox[baprs]-[0-9a-zA-Z]{10,48}",
    "Private Key": r"-----BEGIN PRIVATE KEY-----"
}

SENSITIVE_FILES = ['.env', 'id_rsa', 'config.yml']

def fetch_repo_contents(repo_url):
    if "github.com/" not in repo_url:
        raise ValueError("Invalid GitHub URL.")
    api_url = repo_url.replace("https://github.com", "https://api.github.com/repos")
    contents_url = api_url + "/contents"
    response = requests.get(contents_url)
    response.raise_for_status()
    return response.json()

def scan_for_secrets(file_content):
    results = []
    for key, pattern in SENSITIVE_PATTERNS.items():
        if re.search(pattern, file_content):
            results.append(f"Potential {key} found.")
    return results

def run_analysis(repo_url):
    print(f"\nüîç Scanning repository: {repo_url}")
    results = []
    try:
        files = fetch_repo_contents(repo_url)
        for file in files:
            # Check if file is sensitive
            if file['name'] in SENSITIVE_FILES:
                results.append(f"‚ö†Ô∏è Sensitive file detected: {file['name']}")

            # Download and scan the file content for secrets
            if file['type'] == 'file' and file.get('download_url'):
                file_resp = requests.get(file['download_url'])
                secrets = scan_for_secrets(file_resp.text)
                results.extend(secrets)

    except Exception as e:
        results.append(f"Error: {e}")

    return results

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: python analyzer.py <GitHub repo URL>")
        sys.exit(1)
    repo_url = sys.argv[1]
    findings = run_analysis(repo_url)
    if findings:
        print("\nüîí Security Findings:")
        for item in findings:
            print("- " + item)
    else:
        print("\n‚úÖ No obvious security issues found.")
requests
__pycache__/
*.pyc
.env
# GitHub Repository Security Analyzer

A Python tool to analyze public GitHub repositories for basic security risks, such as exposed secrets and sensitive files.

## Features

- Detects exposed secrets like AWS keys and Slack tokens using regex.
- Flags sensitive files (`.env`, `id_rsa`, etc.).
- Scans repository files for potential security risks.
- Outputs findings in the terminal.

## Installation

1. Clone the repository:
   ```bash
   git clone https://github.com/yourusername/github-security-analyzer.git
   cd github-security-analyzer
pip install -r requirements.txt
python analyzer.py https://github.com/username/repository
üîç Scanning repository: https://github.com/example-user/example-repo

üîí Security Findings:
- ‚ö†Ô∏è Sensitive file detected: .env
- Potential AWS Access Key found.
- Potential Slack Token found.
